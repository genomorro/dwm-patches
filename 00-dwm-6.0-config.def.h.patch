--- a/config.def.h	2013-06-30 18:20:44.099877424 -0500
+++ b/config.def.h	2013-07-01 18:12:04.444977309 -0500
@@ -1,29 +1,38 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const char font[]            = "-*-terminus-medium-r-*-*-16-*-*-*-*-*-*-*";
+static const char font[]            = "-unknown-DejaVu Sans Mono-normal-normal-normal-*-13-*-*-*-m-0-iso10646-1";
 static const char normbordercolor[] = "#444444";
 static const char normbgcolor[]     = "#222222";
 static const char normfgcolor[]     = "#bbbbbb";
 static const char selbordercolor[]  = "#005577";
 static const char selbgcolor[]      = "#005577";
 static const char selfgcolor[]      = "#eeeeee";
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 5;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const Bool showbar           = True;     /* False means no bar */
 static const Bool topbar            = True;     /* False means bottom bar */
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "e", "w", "o" };
 
 static const Rule rules[] = {
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            True,        -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       False,       -1 },
+	/* class      instance      title       tags mask     isfloating   monitor */
+	{ "Display",   NULL,	    NULL,	0,   	      True,	   -1 },
+	{ "MPlayer",   NULL,	    NULL,	0,   	      True,	   -1 },
+	{ "Volwheel",  NULL,	    NULL,	0,	      True,	   -1 },
+	{ "Emacs",     NULL,        NULL,       1,            False,       -1 },
+	{ "Firefox",   NULL,        NULL,       1 << 1,       False,       -1 },
+	{ "Conkeror",  "Download",  NULL,       1 << 1,	      True,	   -1 },	
+	{ "Conkeror",  "Addons",    NULL,       1 << 1,	      True,	   -1 },
+	{ "Conkeror",  "Navigator", NULL,       1 << 1,	      False,	   -1 },
+	{ "Gimp",      "gimp",	    NULL,	1 << 2,	      False,	   -1 },
+	{ NULL,	       "VCLSalFrame", NULL, 	1 << 2,	      False,   	   -1 },
+	{ NULL,	       "VCLSalFrame.DocumentWindow", NULL, 1 << 2, False,  -1 },
 };
 
 /* layout(s) */
-static const float mfact      = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact      = 0.63; /* factor of master area size [0.05..0.95] */
 static const int nmaster      = 1;    /* number of clients in master area */
 static const Bool resizehints = True; /* True means respect size hints in tiled resizals */
 
@@ -35,7 +43,7 @@
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -47,19 +55,41 @@
 
 /* commands */
 static const char *dmenucmd[] = { "dmenu_run", "-fn", font, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
-static const char *termcmd[]  = { "uxterm", NULL };
+static const char *termcmd[]  = { "xterm", NULL };
+static const char *kbdup[]    = { "asus-kbd-backlight", "up", NULL };
+static const char *kbddown[]  = { "asus-kbd-backlight", "down", NULL };
+static const char *display[]  = { "toggle-display", NULL };
+static const char *touchpad[] = { "toggle-touchpad", NULL };
+static const char *vwebcam[]  = { "xterm", "-e", "webcam", NULL };
+static const char *pwebcam[]  = { "webcam", "-r", "1", NULL };
+static const char *swebcam[]  = { "webcam", "-r", "0", NULL };
+static const char *printscrn[]= { "screenshot", "-m", "root", "-f", "desktop", NULL };
+static const char *printwin[] = { "screenshot", "-m", "window", "-f", "window", NULL };
+static const char *emacscmd[] = { "emacsclient", "-a=", "-c", NULL };
+static const char *dwmenu[]   =	{ "dwmenu", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,                       XK_x,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,			XK_a,	   spawn,	   {.v = dwmenu } },
+	{ MODKEY,			XK_e,	   spawn,	   {.v = emacscmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ 0,             		0x1008ff05, spawn,          {.v = kbdup } },
+	{ 0,             		0x1008ff06, spawn,          {.v = kbddown } },
+	{ 0,             		0x1008ff59, spawn,          {.v = display } },
+	{ 0,				0x1008ffa9, spawn,	    {.v = touchpad } },
+	{ 0,				0x1008ff8f, spawn,	    {.v = vwebcam } },
+	{ Mod1Mask,			0x1008ff8f, spawn,	    {.v = pwebcam } },
+	{ MODKEY,			0x1008ff8f, spawn,	    {.v = swebcam } },
+	{ 0,				XK_Print,  spawn,	   {.v = printscrn } },
+	{ Mod1Mask,			XK_Print,  spawn,	   {.v = printwin } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY|ShiftMask,             XK_j,      setmfact,       {.f = -0.05} },
+	{ MODKEY|ShiftMask,             XK_k,      setmfact,       {.f = +0.05} },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
@@ -77,12 +99,6 @@
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
-	TAGKEYS(                        XK_4,                      3)
-	TAGKEYS(                        XK_5,                      4)
-	TAGKEYS(                        XK_6,                      5)
-	TAGKEYS(                        XK_7,                      6)
-	TAGKEYS(                        XK_8,                      7)
-	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
 };
 
